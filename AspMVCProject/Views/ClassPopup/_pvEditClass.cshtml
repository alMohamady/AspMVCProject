@model AspMVCProject.Models.TheClass

<div class="modal fade" role="dialog" tabindex="-1" id="editClassModal" aria-labelledby="editClassModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Edit Class</h3>
            </div>
            <div class="modal-body">
                <form asp-action="Edit" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="className" class="control-label"></label>
                        <input asp-for="className" class="form-control" />
                        <span asp-validation-for="className" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="teacher" class="control-label"></label>
                        <input asp-for="teacher" class="form-control" />
                        <span asp-validation-for="teacher" class="text-danger"></span>
                    </div>


                    <h4>Students</h4>

                    <table class="table table-bordered" id="studentsTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Birth date</th>
                                <th>Phone</th>
                                <th> </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.students.Count; i++)
                            {
                                <tr data-index="@i">
                                    <td>
                                        @Html.EditorFor(x => x.students[i].Name, new { htmlAttributes = new { @class = "form-control student-name" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(x => x.students[i].BirthDate, new { htmlAttributes = new { @class = "form-control student-birthdate" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(x => x.students[i].phone, new { htmlAttributes = new { @class = "form-control student-phone" } })
                                    </td>

                                    <td>
                                        @if (i == Model.students.Count - 1)
                                        {
                                            <button id="addbtn-@i" type="button" class="btn btn-sm btn-secondary myAddbtn visible"
                                                    onclick="AddItem(this)" style="left:90%;">
                                                Add
                                            </button>

                                            <button id="deletebtn-@i" type="button" class="btn btn-sm btn-danger myDelBtn invisible"
                                                    onclick="DeleteItem(this)" style="left:90%;">
                                                Delete
                                            </button>
                                        }
                                        else
                                        {
                                            <button id="addbtn-@i" type="button" class="btn btn-sm btn-secondary invisible"
                                                    onclick="AddItem(this)" style="left:90%;">
                                                Add
                                            </button>

                                            <button id="deletebtn-@i" type="button" class="btn btn-sm btn-danger visible"
                                                    onclick="DeleteItem(this)" style="left:90%;">
                                                Delete
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <input type="hidden" id="hdnLastIndex" value="@(Model.students.Count - 1)" />

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="dismiss()">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="submitBtn">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    function dismiss() {
       $("#editClassModal").modal('hide');
    }

    function DeleteItem(btn) {
        $(btn).closest('tr').remove();
    }

    function AddItem(btn) {
        var table = document.getElementById('studentsTable');
        var rows = table.getElementsByTagName('tr');

        var rowOuterHtml = rows[rows.length - 1].outerHTML;
        var lastrowIdx = document.getElementById('hdnLastIndex').value;

        var nextrowIdx = eval(lastrowIdx) + 1;

        document.getElementById('hdnLastIndex').value = nextrowIdx;
        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;

        var btnAddId = btn.id;
        var btnDeleteid = btnAddId.replaceAll('addbtn', 'deletebtn');

        var delbtn = document.getElementById(btnDeleteid);
        delbtn.classList.add('visible');
        delbtn.classList.remove('invisible');

        var addbtn = document.getElementById(btnAddId);
        addbtn.classList.remove('visible');
        addbtn.classList.add('invisible');
    }
</script>